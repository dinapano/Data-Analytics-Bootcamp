<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Orders (Tableau - Final Assignment)' inline='true' name='federated.1odxsn70n06ce61fzixl50hdfx88' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau - Final Assignment' name='excel-direct.1lcwlma1ozjgv41alnuzg10lnkek'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/dina-/Desktop/Tableau - Final Assignment.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1lcwlma1ozjgv41alnuzg10lnkek' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Min/Max Sales' datatype='real' name='[Calculation_1445936976561934340]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF SUM([Sales]) = WINDOW_MIN(SUM([Sales])) OR SUM([Sales]) = WINDOW_MAX(SUM([Sales])) THEN SUM([Sales]) END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_171529530D7B43BD8413D71E86A382CA]' role='measure' type='quantitative' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_GB' class='hyper' dbname='C:/Users/dina-/AppData/Local/Temp/TableauTemp/#TableauTemp_1u26j24079bgqy14c96gl1nd6d48.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='12/03/2024 11:52:56 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Row ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Row ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Row ID</remote-alias>
              <ordinal>0</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9994</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>1</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3173</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Order Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Date</remote-alias>
              <ordinal>2</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1392</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Ship Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Date</remote-alias>
              <ordinal>3</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1487</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ship Mode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Mode</remote-alias>
              <ordinal>4</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer ID</remote-alias>
              <ordinal>5</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1048</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer Name</remote-alias>
              <ordinal>6</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1048</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Segment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Segment</remote-alias>
              <ordinal>7</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country/Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country/Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country/Region</remote-alias>
              <ordinal>8</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>9</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>500</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>10</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Postal Code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Postal Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Postal Code</remote-alias>
              <ordinal>11</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>610</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>12</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product ID</remote-alias>
              <ordinal>13</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2051</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>14</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sub-Category</remote-alias>
              <ordinal>15</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Name</remote-alias>
              <ordinal>16</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2025</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>17</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3481</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Quantity</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Quantity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Quantity</remote-alias>
              <ordinal>18</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Discount</remote-alias>
              <ordinal>19</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>20</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3859</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_171529530D7B43BD8413D71E86A382CA]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Greece&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <object-graph>
        <objects>
          <object caption='Orders' id='Orders_171529530D7B43BD8413D71E86A382CA'>
            <properties context=''>
              <relation connection='excel-direct.1lcwlma1ozjgv41alnuzg10lnkek' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Profit Per Category &amp; Sub-Category'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Tableau - Final Assignment)' name='federated.1odxsn70n06ce61fzixl50hdfx88' />
          </datasources>
          <datasource-dependencies datasource='federated.1odxsn70n06ce61fzixl50hdfx88'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1odxsn70n06ce61fzixl50hdfx88].[sum:Profit:qk]' />
              <text column='[federated.1odxsn70n06ce61fzixl50hdfx88].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1odxsn70n06ce61fzixl50hdfx88].[none:Category:nk] / [federated.1odxsn70n06ce61fzixl50hdfx88].[none:Sub-Category:nk])</rows>
        <cols>[federated.1odxsn70n06ce61fzixl50hdfx88].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{63EB0D12-E73A-4B11-878A-6F916DA0D862}' />
    </worksheet>
    <worksheet name='Profit Per Ship Mode'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Tableau - Final Assignment)' name='federated.1odxsn70n06ce61fzixl50hdfx88' />
          </datasources>
          <datasource-dependencies datasource='federated.1odxsn70n06ce61fzixl50hdfx88'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1odxsn70n06ce61fzixl50hdfx88].[none:Ship Mode:nk]' />
              <wedge-size column='[federated.1odxsn70n06ce61fzixl50hdfx88].[sum:Profit:qk]' />
              <size column='[federated.1odxsn70n06ce61fzixl50hdfx88].[sum:Profit:qk]' />
              <text column='[federated.1odxsn70n06ce61fzixl50hdfx88].[none:Ship Mode:nk]' />
              <text column='[federated.1odxsn70n06ce61fzixl50hdfx88].[sum:Profit:qk]' />
              <text column='[federated.1odxsn70n06ce61fzixl50hdfx88].[pcto:sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4A82B531-3FEF-49B7-8F9B-990589782D0A}' />
    </worksheet>
    <worksheet name='Relation Between Discount &amp; Offers'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Tableau - Final Assignment)' name='federated.1odxsn70n06ce61fzixl50hdfx88' />
          </datasources>
          <datasource-dependencies datasource='federated.1odxsn70n06ce61fzixl50hdfx88'>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_171529530D7B43BD8413D71E86A382CA]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Orders_171529530D7B43BD8413D71E86A382CA]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_171529530D7B43BD8413D71E86A382CA:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1odxsn70n06ce61fzixl50hdfx88].[__tableau_internal_object_id__].[cnt:Orders_171529530D7B43BD8413D71E86A382CA:qk]' />
              <text column='[federated.1odxsn70n06ce61fzixl50hdfx88].[__tableau_internal_object_id__].[cnt:Orders_171529530D7B43BD8413D71E86A382CA:qk]' />
              <text column='[federated.1odxsn70n06ce61fzixl50hdfx88].[sum:Discount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1odxsn70n06ce61fzixl50hdfx88].[__tableau_internal_object_id__].[cnt:Orders_171529530D7B43BD8413D71E86A382CA:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1odxsn70n06ce61fzixl50hdfx88].[__tableau_internal_object_id__].[cnt:Orders_171529530D7B43BD8413D71E86A382CA:qk]' />
              <text column='[federated.1odxsn70n06ce61fzixl50hdfx88].[__tableau_internal_object_id__].[cnt:Orders_171529530D7B43BD8413D71E86A382CA:qk]' />
              <text column='[federated.1odxsn70n06ce61fzixl50hdfx88].[sum:Discount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1odxsn70n06ce61fzixl50hdfx88].[sum:Discount:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1odxsn70n06ce61fzixl50hdfx88].[__tableau_internal_object_id__].[cnt:Orders_171529530D7B43BD8413D71E86A382CA:qk]' />
              <text column='[federated.1odxsn70n06ce61fzixl50hdfx88].[__tableau_internal_object_id__].[cnt:Orders_171529530D7B43BD8413D71E86A382CA:qk]' />
              <text column='[federated.1odxsn70n06ce61fzixl50hdfx88].[sum:Discount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1odxsn70n06ce61fzixl50hdfx88].[none:Sub-Category:nk]</rows>
        <cols>([federated.1odxsn70n06ce61fzixl50hdfx88].[__tableau_internal_object_id__].[cnt:Orders_171529530D7B43BD8413D71E86A382CA:qk] + [federated.1odxsn70n06ce61fzixl50hdfx88].[sum:Discount:qk])</cols>
      </table>
      <simple-id uuid='{9DADC173-F96D-451E-9C32-2F96B162C65A}' />
    </worksheet>
    <worksheet name='Sales per City'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Tableau - Final Assignment)' name='federated.1odxsn70n06ce61fzixl50hdfx88' />
          </datasources>
          <datasource-dependencies datasource='federated.1odxsn70n06ce61fzixl50hdfx88'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1odxsn70n06ce61fzixl50hdfx88].[sum:Sales:qk]' />
              <size column='[federated.1odxsn70n06ce61fzixl50hdfx88].[sum:Sales:qk]' />
              <text column='[federated.1odxsn70n06ce61fzixl50hdfx88].[none:City:nk]' />
              <text column='[federated.1odxsn70n06ce61fzixl50hdfx88].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{9356BCEC-3C18-4E47-93A1-C4A5805D6221}' />
    </worksheet>
    <worksheet name='Sales per City Over Time'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Tableau - Final Assignment)' name='federated.1odxsn70n06ce61fzixl50hdfx88' />
          </datasources>
          <datasource-dependencies datasource='federated.1odxsn70n06ce61fzixl50hdfx88'>
            <column caption='Min/Max Sales' datatype='real' name='[Calculation_1445936976561934340]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF SUM([Sales]) = WINDOW_MIN(SUM([Sales])) OR SUM([Sales]) = WINDOW_MAX(SUM([Sales])) THEN SUM([Sales]) END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1445936976561934340]' derivation='User' name='[usr:Calculation_1445936976561934340:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1odxsn70n06ce61fzixl50hdfx88].[none:City:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1odxsn70n06ce61fzixl50hdfx88].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1odxsn70n06ce61fzixl50hdfx88].[yr:Order Date:ok]' value='234' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1odxsn70n06ce61fzixl50hdfx88].[none:City:nk]' />
              <text column='[federated.1odxsn70n06ce61fzixl50hdfx88].[usr:Calculation_1445936976561934340:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&#10;&lt;</run>
                <run>[federated.1odxsn70n06ce61fzixl50hdfx88].[usr:Calculation_1445936976561934340:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1odxsn70n06ce61fzixl50hdfx88].[sum:Sales:qk]</rows>
        <cols>[federated.1odxsn70n06ce61fzixl50hdfx88].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{3416244E-C264-4EB4-A61A-C7B2892C1A1E}' />
    </worksheet>
    <worksheet name='Sales per Segment &amp; per Category &amp; per Ship Mode'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Tableau - Final Assignment)' name='federated.1odxsn70n06ce61fzixl50hdfx88' />
          </datasources>
          <datasource-dependencies datasource='federated.1odxsn70n06ce61fzixl50hdfx88'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1odxsn70n06ce61fzixl50hdfx88].[none:Ship Mode:nk]' value='84' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1odxsn70n06ce61fzixl50hdfx88].[none:Segment:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1odxsn70n06ce61fzixl50hdfx88].[sum:Sales:qk]</rows>
        <cols>([federated.1odxsn70n06ce61fzixl50hdfx88].[none:Category:nk] / [federated.1odxsn70n06ce61fzixl50hdfx88].[none:Ship Mode:nk])</cols>
      </table>
      <simple-id uuid='{DE79305B-FDA4-4FFE-A589-DFB7FF828A9E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98230' id='7' param='horz' type-v2='layout-flow' w='99064' x='468' y='885'>
            <zone h='98230' id='5' type-v2='layout-basic' w='91165' x='468' y='885'>
              <zone h='33186' id='3' name='Profit Per Category &amp; Sub-Category' w='47338' x='44295' y='34956'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='47898' id='9' name='Profit Per Ship Mode' w='21527' x='468' y='885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='47898' id='12' name='Sales per City' w='22300' x='21995' y='885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='50332' id='14' name='Sales per City Over Time' w='43827' x='468' y='48783'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='30973' id='18' name='Relation Between Discount &amp; Offers' w='47338' x='44295' y='68142'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='34071' id='16' name='Sales per Segment &amp; per Category &amp; per Ship Mode' w='47338' x='44295' y='885'>
                <layout-cache cell-count-w='12' minheight='269' non-cell-size-w='67' type-h='scalable' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='135' h='98230' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='7899' x='91633' y='885'>
              <zone fixed-size='86' h='10398' id='8' is-fixed='true' name='Profit Per Category &amp; Sub-Category' pane-specification-id='0' param='[federated.1odxsn70n06ce61fzixl50hdfx88].[sum:Profit:qk]' type-v2='color' w='7899' x='91633' y='885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='130' h='15266' id='10' is-fixed='true' name='Profit Per Ship Mode' pane-specification-id='0' param='[federated.1odxsn70n06ce61fzixl50hdfx88].[none:Ship Mode:nk]' type-v2='color' w='7899' x='91633' y='11283'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='68' h='8407' id='11' is-fixed='true' name='Profit Per Ship Mode' pane-specification-id='0' param='[federated.1odxsn70n06ce61fzixl50hdfx88].[sum:Profit:qk]' type-v2='size' w='7899' x='91633' y='26549'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='102' h='12168' id='13' is-fixed='true' name='Sales per City' pane-specification-id='0' param='[federated.1odxsn70n06ce61fzixl50hdfx88].[sum:Sales:qk]' type-v2='color' w='7899' x='91633' y='34956'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='127' h='14934' id='15' is-fixed='true' name='Sales per City Over Time' pane-specification-id='0' param='[federated.1odxsn70n06ce61fzixl50hdfx88].[none:City:nk]' type-v2='color' w='7899' x='91633' y='47124'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='97' h='11615' id='17' is-fixed='true' name='Sales per Segment &amp; per Category &amp; per Ship Mode' pane-specification-id='0' param='[federated.1odxsn70n06ce61fzixl50hdfx88].[none:Segment:nk]' type-v2='color' w='7899' x='91633' y='62058'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7190' id='19' name='Relation Between Discount &amp; Offers' pane-specification-id='1' param='[federated.1odxsn70n06ce61fzixl50hdfx88].[__tableau_internal_object_id__].[cnt:Orders_171529530D7B43BD8413D71E86A382CA:qk]' type-v2='color' w='7899' x='91633' y='73673'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2150' minheight='2150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98230' id='20' param='vert' type-v2='layout-flow' w='99064' x='468' y='885'>
                <zone fixed-size='280' h='47898' id='9' is-fixed='true' name='Profit Per Ship Mode' w='21527' x='468' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='130' h='15266' id='10' name='Profit Per Ship Mode' pane-specification-id='0' param='[federated.1odxsn70n06ce61fzixl50hdfx88].[none:Ship Mode:nk]' type-v2='color' w='7899' x='91633' y='11283'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='68' h='8407' id='11' name='Profit Per Ship Mode' pane-specification-id='0' param='[federated.1odxsn70n06ce61fzixl50hdfx88].[sum:Profit:qk]' type-v2='size' w='7899' x='91633' y='26549'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47898' id='12' is-fixed='true' name='Sales per City' w='22300' x='21995' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='102' h='12168' id='13' name='Sales per City' pane-specification-id='0' param='[federated.1odxsn70n06ce61fzixl50hdfx88].[sum:Sales:qk]' type-v2='color' w='7899' x='91633' y='34956'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='265' h='34071' id='16' is-fixed='true' name='Sales per Segment &amp; per Category &amp; per Ship Mode' w='47338' x='44295' y='885'>
                  <layout-cache cell-count-w='12' minheight='269' non-cell-size-w='67' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='97' h='11615' id='17' name='Sales per Segment &amp; per Category &amp; per Ship Mode' pane-specification-id='0' param='[federated.1odxsn70n06ce61fzixl50hdfx88].[none:Segment:nk]' type-v2='color' w='7899' x='91633' y='62058'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='257' h='33186' id='3' is-fixed='true' name='Profit Per Category &amp; Sub-Category' w='47338' x='44295' y='34956'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='86' h='10398' id='8' name='Profit Per Category &amp; Sub-Category' pane-specification-id='0' param='[federated.1odxsn70n06ce61fzixl50hdfx88].[sum:Profit:qk]' type-v2='color' w='7899' x='91633' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50332' id='14' is-fixed='true' name='Sales per City Over Time' w='43827' x='468' y='48783'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='127' h='14934' id='15' name='Sales per City Over Time' pane-specification-id='0' param='[federated.1odxsn70n06ce61fzixl50hdfx88].[none:City:nk]' type-v2='color' w='7899' x='91633' y='47124'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='240' h='30973' id='18' is-fixed='true' name='Relation Between Discount &amp; Offers' w='47338' x='44295' y='68142'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7190' id='19' name='Relation Between Discount &amp; Offers' pane-specification-id='1' param='[federated.1odxsn70n06ce61fzixl50hdfx88].[__tableau_internal_object_id__].[cnt:Orders_171529530D7B43BD8413D71E86A382CA:qk]' type-v2='color' w='7899' x='91633' y='73673'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B5F1F822-357B-4478-8A1F-867D1E4301AD}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Profit Per Category &amp; Sub-Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1odxsn70n06ce61fzixl50hdfx88].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1odxsn70n06ce61fzixl50hdfx88].[none:Category:nk]</field>
            <field>[federated.1odxsn70n06ce61fzixl50hdfx88].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{925FE0C5-FC63-44C2-AF39-1F7B28B96950}' />
    </window>
    <window class='worksheet' name='Profit Per Ship Mode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1odxsn70n06ce61fzixl50hdfx88].[none:Ship Mode:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1odxsn70n06ce61fzixl50hdfx88].[sum:Profit:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1odxsn70n06ce61fzixl50hdfx88].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9383AFBF-71B4-479F-AEB2-F0885C9059EE}' />
    </window>
    <window class='worksheet' name='Sales per City'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1odxsn70n06ce61fzixl50hdfx88].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1odxsn70n06ce61fzixl50hdfx88].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EB7D33E6-7105-4F46-B169-0E2B8F151B19}' />
    </window>
    <window class='worksheet' name='Sales per City Over Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1odxsn70n06ce61fzixl50hdfx88].[none:City:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1odxsn70n06ce61fzixl50hdfx88].[none:City:nk]</field>
            <field>[federated.1odxsn70n06ce61fzixl50hdfx88].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D1CA6A1E-7311-40FD-96E5-0AA0310F026A}' />
    </window>
    <window class='worksheet' name='Sales per Segment &amp; per Category &amp; per Ship Mode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1odxsn70n06ce61fzixl50hdfx88].[none:Segment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1odxsn70n06ce61fzixl50hdfx88].[none:Category:nk]</field>
            <field>[federated.1odxsn70n06ce61fzixl50hdfx88].[none:Segment:nk]</field>
            <field>[federated.1odxsn70n06ce61fzixl50hdfx88].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E8D6BEFE-90AC-4663-A7E1-9330F6DE7AB6}' />
    </window>
    <window class='worksheet' name='Relation Between Discount &amp; Offers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1odxsn70n06ce61fzixl50hdfx88].[__tableau_internal_object_id__].[cnt:Orders_171529530D7B43BD8413D71E86A382CA:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1odxsn70n06ce61fzixl50hdfx88].[__tableau_internal_object_id__].[cnt:Orders_171529530D7B43BD8413D71E86A382CA:qk]</field>
            <field>[federated.1odxsn70n06ce61fzixl50hdfx88].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BAA2AE00-1AF9-46B0-9FEC-C621909E3C35}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Profit Per Category &amp; Sub-Category' />
        <viewpoint name='Profit Per Ship Mode'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1odxsn70n06ce61fzixl50hdfx88].[none:Ship Mode:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Relation Between Discount &amp; Offers' />
        <viewpoint name='Sales per City'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales per City Over Time'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1odxsn70n06ce61fzixl50hdfx88].[none:City:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sales per Segment &amp; per Category &amp; per Ship Mode'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1odxsn70n06ce61fzixl50hdfx88].[none:Segment:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{A3336842-5E03-407A-B1CD-7D086BC26D73}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      W6/c/7cAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Profit Per Category &amp; Sub-Category' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Profit Per Ship Mode' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Relation Between Discount &amp; Offers' width='192'>
      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
      qgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sales per City' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales per City Over Time' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sales per Segment &amp; per Category &amp; per Ship Mode' width='192'>
      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
      1J+40lEMpQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
